#!/bin/bash

filename="$HOME/.calories"

if [ ! -f "$filename" ]; then
  touch "$filename"
fi

if [ $# -eq 0 ]; then
  "$0" add
  exit 0
fi

case "$1" in
  "add")
    food=$(awk -F'\t' '
      { print $2 }
    ' "$filename" | sort | uniq | fzf --print-query | tail -n 1)

    if [ -z "$food" ]; then
      echo "No food selected"
      exit 1
    fi

    date=$(date +%Y-%m-%d)
    calories=$(awk -F'\t' '
      BEGIN { acc = -1 }
      /'"$food"'/ { acc = $4 }
      END { print acc }
    ' "$filename")
    protein=$(awk -F'\t' '
      BEGIN { acc = -1 }
      /'"$food"'/ { acc = $5 }
      END { print acc }
    ' "$filename")

    if [ "$calories" -eq -1 ]; then
      read -r -p "Calories: " calories

      if [ -z "$calories" ]; then
        echo "No calories entered"
        exit 1
      fi
    fi

    if [ "$protein" -eq -1 ]; then
      read -r -p "Protein: " protein

      if [ -z "$protein" ]; then
        echo "No protein entered"
        exit 1
      fi
    fi

    read -r -p "Servings: " servings
    if [ -z "$servings" ]; then
      echo "No servings entered"
      exit 1
    fi

    echo "$date	$food	$servings	$calories	$protein" >> "$filename"
    "$0" show
    ;;
  "summary")
    firstLine=$(head -n 1 "$filename")
    startDay=$(echo "$firstLine" | awk -F'\t' '{ print $1 }')
    startEpoch=$(date -d "$startDay" +%s)
    currentEpoch=$(date +%s)

    awk -F'\t' -v startEpoch="$startEpoch" -v currentEpoch="$currentEpoch" '
      BEGIN {
        calories = 0
        protein = 0
        caloriesToday = 0
        proteinToday = 0
      }
      {
        servings = $3
        calories += $4 * servings
        protein += $5 * servings
      }
      /^'"$(date +%Y-%m-%d)"'/ {
        servings = $3
        caloriesToday += $4 * servings
        proteinToday += $5 * servings
      }
      END {
        dailyCalories = 2000
        dailyProtein = 50
        days = (currentEpoch - startEpoch) / 86400
        requiredCalories = dailyCalories * days
        requiredProtein = dailyProtein * days

        printf "Days:        % .4f\n", days
        printf "Calories:    % d\n", calories
        printf "  Per day:   % d\n", calories / days
        printf "  Remaining: % d\n", requiredCalories - calories
        printf "  Today:     % d\n", caloriesToday
        printf "Protein:     % d\n", protein
        printf "  Per day:   % d\n", protein / days
        printf "  Remaining: % d\n", requiredProtein - protein
        printf "  Today:     % d\n", proteinToday
      }
    ' "$filename"
    ;;
  "show")
    awk -F'\t' '
      BEGIN {
        FS = "\t"
        OFS = "\t"
        print "Date", "Food", "Servings", "Calories", "Protein"
      }
      {
        print $1, $2, $3, $4, $5
      }
    ' "$filename" | column -t -s $'\t'
    ;;
  "count")
    field="$2"
    awk -F'\t' '
      BEGIN { acc = 0 }
      { acc += $'"$field"' }
      END { print acc }
    ' "$filename"
    ;;
  "edit")
    $EDITOR "$filename"
    ;;
  "today")
    date=$(date +%Y-%m-%d)
    awk -F'\t' '
      BEGIN {
        total_calories = 0
        total_protein = 0
      }
      /^'"$date"'/ {
        print $0
        servings = $3
        total_calories += $4 * servings
        total_protein += $5 * servings
      }
      END {
        print ""
        print "Total calories: " total_calories
        print "Total protein: " total_protein
      }
    ' "$filename"
    ;;
  "help")
    echo "Usage: calories <command>"
    echo "Commands:"
    echo "  add - add a new entry"
    echo "  summary - show summary"
    echo "  show - show all entries"
    echo "  count <field> - sum all entries for a field"
    echo "  edit - edit the file"
    echo "  today - show today's entries"
    echo "  help - show this help message"
    ;;
  *)
    echo "Invalid option"
    ;;
esac
